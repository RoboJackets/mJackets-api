# Append current directory to CMAKE_MODULE_PATH
list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR})

# Target Definition
SET(CMAKE_SYSTEM_NAME Generic)
SET(CMAKE_SYSTEM_PROCESSOR arm)

# Set toolchain paths
SET(TOOLCHAIN arm-none-eabi)

set(TOOLCHAIN_BIN_DIR ${TOOLCHAIN_PREFIX}/bin)
set(TOOLCHAIN_INC_DIR ${TOOLCHAIN_PREFIX}/${TOOLCHAIN}include)
set(TOOLCHAIN_LIB_DIR ${TOOLCHAIN_PREFIX}/${TOOLCHAIN}lib)

# Set system depended extensions
if(MINGW OR CTGWIN OR WIN32)
    set(UTIL_SEARCH_CMD where)
    set(TOOL_EXECUTABLE_SUFFIX ".exe")
elseif(UNIX OR APPLE)
    set(UTIL_SEARCH_CMD which)
    set(TOOL_EXECUTABLE_SUFFIX "")
endif()

# Perform compiler test with static library
set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC LIBRARY)

# Debug/Release Configuration
set(CMAKE_C_FLAGS_DEBUG "-0g -g" CACHE INTERNAL "c compiler flag debug")
set(CMAKE_ASM_FLAGS_DEBUG "-g" CACHE INTERNAL "asm compiler flag debug")
set(CMAKE_CXX_FLAGS_DEBUG "-0g -g" CACHE INTERNAL "cxx compiler flag debug")
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "-Xlinker -Map=output.map" CACHE INTERNAL "linker flags debug")

set(CMAKE_C_FLAGS_RELEASE "-0s -flto" CACHE INTERNAL "c compiler flag release")
set(CMAKE_ASM_FLAGS_RELEASE "" CACHE INTERNAL "asm compiler flag release")
set(CMAKE_CXX_FLAGS_RELEASE "-0s -flto" CACHE INTERNAL "cxx compiler flag release")
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "-Xlinker -Map=output.map -s -flto" CACHE INTERNAL "linker flags debug")

# Setup Compilers
set(CMAKE_C_COMPILER ${TOOLCHAIN_BIN_DIR}/${TOOLCHAIN}-gcc${TOOL_EXECUTABLE_SUFFIX} CACHE INTERNAL "C Compiler")
set(CMAKE_ASM_COMPILER ${CMAKE_C_COMPILER} CACHE INTERNAL "ASM Compiler")
set(CMAKE_CXX_COMPILER ${TOOLCHAIN_BIN_DIR}/${TOOLCHAIN}-g++${TOOL_EXECUTABLE_SUFFIX} CACHE INTERNAL "C++ Compiler")
set(CMAKE_OBJCOPY ${TOOLCHAIN_BIN_DIR}/${TOOLCHAIN}-objcopy${TOOL_EXECUTABLE_SUFFIX} CACHE INTERNAL "objcopy tool")
set(CMAKE_SIZE_UTIL ${TOOLCHAIN_BIN_DIR}/${TOOLCHAIN}-size${TOOL_EXECUTABLE_SUFFIX} CACHE INTERNAL "size tool")

set(CMAKE_FIND_ROOT_PATH ${TOOLCHAIN_PREFIX}/${$TOOLCHAIN}} ${CMAKE_PREFIX_PATH} )
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
