jobs:
- name: build-master
  plan:
  - in_parallel:
    - do:
      - get: mjackets-api
        trigger: true
      - config:
          image_resource:
            source:
              repository: alpine/git
            type: registry-image
          inputs:
          - name: mjackets-api
          outputs:
          - name: commit-sha
          platform: linux
          run:
            args:
            - -e
            - -x
            - -c
            - git -C mjackets-api rev-parse HEAD > commit-sha/value
            path: sh
        task: get-commit-sha
      - load_var: commit
        file: commit-sha/value
        format: trim
        reveal: true
    - get: ubuntu
      params:
        format: oci
  - do:
    - inputs: []
      put: build-check
    - config:
        image_resource:
          source:
            repository: vito/oci-build-task
          type: registry-image
        inputs:
        - name: mjackets-api
        - name: ubuntu
        outputs:
        - name: image
        params:
          CONTEXT: mjackets-api/ci/dockerfiles/mjackets-build
          IMAGE_ARG_base_image: ubuntu/image.tar
        platform: linux
        run:
          path: build
        caches:
        - path: cache
      on_abort:
        inputs:
        - build-check
        params:
          conclusion: cancelled
        put: build-check
      on_error:
        inputs:
        - build-check
        params:
          conclusion: action_required
        put: build-check
      on_failure:
        inputs:
        - build-check
        params:
          conclusion: failure
          summary: Review the output within Concourse.
          title: Image failed to build
        put: build-check
      privileged: true
      task: build-task-image
      timeout: 30m
  - in_parallel:
      steps:
      - inputs:
        - build-check
        params:
          conclusion: success
          summary: The OCI image was built successfully.
          title: Image built
        put: build-check
      - inputs: []
        put: push-check
  - inputs: detect
    on_abort:
      inputs:
      - push-check
      params:
        conclusion: cancelled
      put: push-check
    on_error:
      inputs:
      - push-check
      params:
        conclusion: action_required
      put: push-check
    on_failure:
      inputs:
      - push-check
      params:
        conclusion: failure
        summary: Review the output within Concourse.
        title: Image failed to push
      put: push-check
    on_success:
      inputs:
      - push-check
      params:
        conclusion: success
        summary: The image was successfully uploaded to the registry.
        title: Image pushed to registry
      put: push-check
    params:
      image: image/image.tar
    put: mjackets-build-image
  public: true
resource_types:
- name: github-check
  source:
    aws_access_key_id: ((aws/sts/ecr.access_key))
    aws_region: us-east-1
    aws_secret_access_key: ((aws/sts/ecr.secret_key))
    aws_session_token: ((aws/sts/ecr.security_token))
    repository: robojackets/concourse-github-check-resource
  type: registry-image
  defaults:
    commit: ((.:commit))
    repository_url: https://github.com/RoboJackets/mjackets-api
    token: (("github.com"/token.token))
  tags:
  - resources
- name: github-webhook
  source:
    aws_access_key_id: ((aws/sts/ecr.access_key))
    aws_region: us-east-1
    aws_secret_access_key: ((aws/sts/ecr.secret_key))
    aws_session_token: ((aws/sts/ecr.security_token))
    repository: robojackets/concourse-github-webhook-resource
  type: registry-image
  tags:
  - resources
resources:
- icon: check
  name: build-check
  public: true
  source:
    check_name: OCI Build
    resource_name: build-check
  type: github-check
  tags:
  - resources
- icon: github
  name: mjackets-api
  public: true
  source:
    branch: master
    password: (("github.com"/token.token))
    paths:
    - ci/dockerfiles/mjackets-build/Dockerfile
    uri: https://github.com/RoboJackets/mjackets-api
    username: x-access-token
  type: git
  webhook_token: ((webhook-token))
  tags:
  - resources
- icon: docker
  name: mjackets-build-image
  public: true
  source:
    password: ((kv/"hub.docker.com".password))
    repository: robojackets/mjackets-dev
    username: ((kv/"hub.docker.com".username))
  type: registry-image
  tags:
  - resources
- icon: check
  name: push-check
  public: true
  source:
    check_name: Push to Registry
    resource_name: push-check
  type: github-check
  tags:
  - resources
- check_every: 1h0m0s
  icon: ubuntu
  name: ubuntu
  public: true
  source:
    repository: ubuntu
    tag: "20.04"
  tags:
  - resources
  type: registry-image
