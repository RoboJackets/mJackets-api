jobs:
- name: build-master
  plan:
  - in_parallel:
      steps:
      - get: concourse-pipeline-library
      - get: mjackets-api
        trigger: true
  - do:
    - inputs:
      - mjackets-api
      put: build-check
    - config:
        image_resource:
          source:
            repository: vito/oci-build-task
          type: registry-image
        inputs:
        - name: mjackets-api
        outputs:
        - name: image
        params:
          CONTEXT: mjackets-api/ci/dockerfiles/mjackets-build
        platform: linux
        run:
          path: build
      on_abort:
        inputs:
        - build-check
        - mjackets-api
        params:
          conclusion: cancelled
        put: build-check
      on_error:
        inputs:
        - build-check
        - mjackets-api
        params:
          conclusion: action_required
        put: build-check
      on_failure:
        inputs:
        - build-check
        - mjackets-api
        params:
          conclusion: failure
          summary: Review the output within Concourse.
          title: Image failed to build
        put: build-check
      privileged: true
      task: build-task-image
      timeout: 30m
  - in_parallel:
      steps:
      - inputs:
        - build-check
        - mjackets-api
        params:
          conclusion: success
          summary: The OCI image was built successfully.
          title: Image built
        put: build-check
      - inputs:
        - mjackets-api
        put: push-check
  - inputs: detect
    on_abort:
      inputs:
      - push-check
      - mjackets-api
      params:
        conclusion: cancelled
      put: push-check
    on_error:
      inputs:
      - push-check
      - mjackets-api
      params:
        conclusion: action_required
      put: push-check
    on_failure:
      inputs:
      - push-check
      - mjackets-api
      params:
        conclusion: failure
        summary: Review the output within Concourse.
        title: Image failed to push
      put: push-check
    on_success:
      inputs:
      - push-check
      - mjackets-api
      params:
        conclusion: success
        summary: The image was successfully uploaded to the registry.
        title: Image pushed to registry
      put: push-check
    params:
      image: image/image.tar
    put: mjackets-build-image
  public: true
resource_types:
- name: github-check
  source:
    password: ((docker-robojackets-org.password))
    repository: docker.robojackets.org/robojackets/concourse-github-check-resource
    username: ((docker-robojackets-org.username))
  type: registry-image
- name: github-webhook
  source:
    password: ((docker-robojackets-org.password))
    repository: docker.robojackets.org/robojackets/concourse-github-webhook-resource
    username: ((docker-robojackets-org.username))
  type: registry-image
resources:
- icon: check-bold
  name: build-check
  public: true
  source:
    check_name: OCI Build
    pull_request: pull-request
    repository: mjackets-api
    resource_name: build-check
    token: ((github-com/token.token))
  type: github-check
- icon: github
  name: concourse-pipeline-library
  public: true
  source:
    branch: main
    password: ((github-com/token.token))
    uri: https://github.com/RoboJackets/concourse-pipeline-library
    username: x-access-token
  type: git
- icon: github
  name: mjackets-api
  public: true
  source:
    branch: master
    password: ((github-com/token.token))
    paths:
    - ci/dockerfiles/mjackets-build/Dockerfile
    uri: https://github.com/RoboJackets/mjackets-api
    username: x-access-token
  type: git
  webhook_token: ((webhook-token))
- icon: docker
  name: mjackets-build-image
  public: true
  source:
    password: ((hub-docker-com.password))
    repository: robojackets/mjackets-dev
    username: ((hub-docker-com.username))
  type: registry-image
- icon: check-bold
  name: push-check
  public: true
  source:
    check_name: Push to Registry
    pull_request: pull-request
    repository: mjackets-api
    resource_name: push-check
    token: ((github-com/token.token))
  type: github-check