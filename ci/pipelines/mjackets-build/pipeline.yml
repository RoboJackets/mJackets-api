---
resource_types:
- name: github-check
  source:
    aws_access_key_id: ((aws/sts/ecr.access_key))
    aws_region: us-east-1
    aws_secret_access_key: ((aws/sts/ecr.secret_key))
    aws_session_token: ((aws/sts/ecr.security_token))
    repository: robojackets/concourse-github-check-resource
  type: registry-image
  defaults:
    commit: ((.:commit))
    repository_url: https://github.com/RoboJackets/mjackets-api
    token: (("github.com"/token.token))
  tags:
  - resources
- name: pull-request
  source:
    repository: teliaoss/github-pr-resource
  type: registry-image
  tags:
  - resources

resources:
- icon: check
  name: build-check
  public: true
  source:
    check_name: mJackets Sanity Build
    resource_name: build-check
  type: github-check
  tags:
  - resources
- icon: check
  name: documentation-check
  public: true
  source:
    check_name: API Documentation Coverage
    resource_name: documentation-check
  type: github-check
  tags:
  - resources
- icon: github
  name: mjackets-api
  public: true
  source:
    branch: master
    password: (("github.com"/token))
    uri: https://github.com/RoboJackets/mjackets-api
    username: x-access-token
  type: git
  webhook_token: ((webhook-token))
  tags:
  - resources

- icon: source-pull
  name: pull-request
  public: true
  source:
    access_token: (("github.com"/token))
    repository: RoboJackets/mjackets-api
    base_branch: master
  type: pull-request
  tags:
  - resources

jobs:
- name: build-master
  plan:
  - get: mjackets-api
    trigger: true

  - config:
      image_resource:
        source:
          repository: alpine/git
        type: registry-image
      inputs:
      - name: mjackets-api
      outputs:
      - name: commit-sha
      platform: linux
      run:
        args:
        - -e
        - -x
        - -c
        - git -C mjackets-api rev-parse HEAD > commit-sha/value
        path: sh
    task: get-commit-sha
  - load_var: commit
    file: commit-sha/value
    format: trim
    reveal: true

  - inputs: []
    put: build-check

  - config:
      image_resource:
        source:
          repository: robojackets/mjackets-dev
        type: registry-image
      inputs:
      - name: mjackets-api
      params:
        SONAR_TOKEN: ((kv/"sonarcloud.io"))
      platform: linux
      run:
        args:
        - -exc
        - |
          cd mjackets-api
          cmake configure . -D BOARD=MTRAIN
          build-wrapper-linux-x86-64 --out-dir bw-output make
          sonar-scanner \
            -Dsonar.organization=robojackets \
            -Dsonar.projectKey=RoboJackets_mjackets-api \
            -Dsonar.sources=. \
            -Dsonar.cfamily.build-wrapper-output=bw-output \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.cfamily.cache.enabled=false \
            -Dsonar.scm.disabled=false
        path: sh
    on_abort:
      inputs:
      - build-check
      params:
        conclusion: cancelled
      put: build-check
    on_error:
      inputs:
      - build-check
      params:
        conclusion: action_required
      put: build-check
    on_failure:
      inputs:
      - build-check
      params:
        conclusion: failure
        summary: Review the output within Concourse.
        title: Sanity build failed
      put: build-check
    task: build

  - inputs:
    - build-check
    params:
      conclusion: success
      summary: mJackets sanity build compiled sucessfully.
      title: Sanity Build Success
    put: build-check

- name: documentation-check-master
  plan:
  - get: mjackets-api
    trigger: true

  - inputs: []
    put: documentation-check

  - config:
      image_resource:
        source:
          repository: robojackets/mjackets-dev
        type: registry-image
      inputs:
      - name: mjackets-api
      platform: linux
      run:
        args:
        - -exc
        - |
          cd mjackets-api/docs
          cmake configure .
          make
          python ../utilities/doxy-coverage/doxy-coverage.py docs_build/doxygen_docs/xml/ --threshold 100
        path: sh
    on_abort:
      inputs:
      - documentation-check
      params:
        conclusion: cancelled
      put: documentation-check
    on_error:
      inputs:
      - documentation-check
      params:
        conclusion: action_required
      put: documentation-check
    on_failure:
      inputs:
      - documentation-check
      params:
        conclusion: failure
        summary: Review the output within Concourse.
        title: Insufficent API Documentation Coverage
      put: documentation-check
    task: documentation-coverage

  - inputs:
    - documentation-check
    params:
      conclusion: success
      summary: mJackets API has 100% documentation coverage.
      title: 100% API Documentation Coverage
    put: documentation-check

- name: build-pull-request
  plan:

  - get: pull-request
    params:
      integration_tool: checkout
      list_changed_files: true
    trigger: true
    version: every

  - inputs: []
    put: build-check

  - config:
      image_resource:
        source:
          repository: robojackets/mjackets-dev
        type: registry-image
      inputs:
      - name: pull-request
      params:
        SONAR_TOKEN: ((kv/"sonarcloud.io"))
      platform: linux
      run:
        args:
        - -exc
        - |
          PULL_REQUEST_KEY=`cat .git/resource/pr`
          PULL_REQUEST_KEY="${PULL_REQUEST_KEY%\"}"
          PULL_REQUEST_KEY="${PULL_REQUEST_KEY#\"}"
          git submodule init && git submodule update
          cmake configure . -D BOARD=MTRAIN
          build-wrapper-linux-x86-64 --out-dir bw-output make
          sonar-scanner \
            -Dsonar.organization=robojackets \
            -Dsonar.projectKey=RoboJackets_mjackets-api \
            -Dsonar.sources=. \
            -Dsonar.cfamily.build-wrapper-output=bw-output \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.cfamily.cache.enabled=false \
            -Dsonar.scm.disabled=false \
            -Dsonar.pullrequest.key=$PULL_REQUEST_KEY
        path: sh
        dir: pull-request
    on_abort:
      inputs:
      - build-check
      params:
        conclusion: cancelled
      put: build-check
    on_error:
      inputs:
      - build-check
      params:
        conclusion: action_required
      put: build-check
    on_failure:
      inputs:
      - build-check
      params:
        conclusion: failure
        summary: Review the output within Concourse.
        title: Sanity build failed
      put: build-check
    task: build

  - inputs:
    - build-check
    params:
      conclusion: success
      summary: mJackets sanity build compiled sucessfully.
      title: Sanity Build Success
    put: build-check

- name: documentation-check-pull-request
  plan:

  - get: pull-request
    params:
      integration_tool: checkout
    trigger: true
    version: every

  - inputs: []
    put: documentation-check

  - config:
      image_resource:
        source:
          repository: robojackets/mjackets-dev
        type: registry-image
      inputs:
      - name: pull-request
      platform: linux
      run:
        args:
        - -exc
        - |
          cmake configure .
          make
          python ../utilities/doxy-coverage/doxy-coverage.py docs_build/doxygen_docs/xml/ --threshold 100
        path: sh
        dir: pull-request/docs
    on_abort:
      inputs:
      - documentation-check
      params:
        conclusion: cancelled
      put: documentation-check
    on_error:
      inputs:
      - documentation-check
      params:
        conclusion: action_required
      put: documentation-check
    on_failure:
      inputs:
      - documentation-check
      params:
        conclusion: failure
        summary: Review the output within Concourse.
        title: Insufficent API Documentation Coverage
      put: documentation-check
    task: documentation-coverage

  - inputs:
    - documentation-check
    params:
      conclusion: success
      summary: mJackets API has 100% documentation coverage.
      title: 100% Documentation Coverage
    put: documentation-check
